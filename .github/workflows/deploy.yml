name: Django CI

on: # This workflow is triggered on pushes to the repository.
  push:
    branches:
      - master
  
# 장고 프로젝트
jobs:
  test:
    runs-on: ubuntu-latest    

    steps: #
    - name: Check out code
      uses: actions/checkout@v2 #
    
    - name: Install docker
      uses: docker/setup-buildx-action@v3  


    - name: Build the Docker image
      run: docker build -t oksusu2020/django_project:$(date +%Y%m%d) .

    - name: Log in to Docker Hub
      run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
    - name: Push the Docker image
      run: docker push oksusu2020/django_project:$(date +%Y%m%d)

    - name: AWS login
      run : |
        echo "${{ secrets.AWS_KEY}}" > aws_key.pem
        chmod 400 aws_key.pem        
        #ssh -i aws_key.pem ubuntu@${{secrets.AWS_HOST_IP}}
        # 43~48 을 쓴다면 40번째 줄로만 해도 접속할 수 있다.
        
        # SSH 디렉토리 생성 및 권한 설정
        # mkdir -p ~/.ssh
        # chmod 700 ~/.ssh

        # # LightSail 서버의 호스트 키 추가
        # ssh-keyscan -H 3.38.101.116 >> ~/.ssh/known_hosts
        ssh -o StrictHostKeyChecking=no -i aws_key.pem ubuntu@${{secrets.AWS_HOST_IP}} << EOF
          echo "AWS login"
          sudo docker pull oksusu2020/django_project:$(date +%Y%m%d)
          sudo docker stop django_container || true
          sudo docker rm django_container || true
          sudo docker run -d --name django_container -p 8000:8000 oksusu2020/django_project:$(date +%Y%m%d)
          exit
        EOF

    - name : Clean up
      run : |        
        rm -rf aws_key.pem
    


  

    